"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9101],{46546:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"intro":[{"type":"link","label":"Home","href":"/legacy-docs/","docId":"welcome","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"category","label":"NEAR Components / BOS","items":[{"type":"link","label":"What is a Component?","href":"/legacy-docs/components/what-is","docId":"components/what-is","unlisted":false},{"type":"link","label":"Basics","href":"/legacy-docs/components/state","docId":"components/state","unlisted":false},{"type":"link","label":"Choose your Dev Environment","href":"/legacy-docs/components/dev-environment","docId":"components/dev-environment","unlisted":false},{"type":"link","label":"Using components on WebApps","href":"/legacy-docs/components/bos-gateway","docId":"components/bos-gateway","unlisted":false},{"type":"link","label":"List of Native Components","href":"/legacy-docs/components/builtin-components","docId":"components/builtin-components","unlisted":false},{"type":"link","label":"Smart Contract Interaction","href":"/legacy-docs/components/interaction","docId":"components/interaction","unlisted":false},{"type":"link","label":"Integrating Components","href":"/legacy-docs/components/integrate-components","docId":"components/integrate-components","unlisted":false},{"type":"link","label":"Web Browser Methods","href":"/legacy-docs/components/web-methods","docId":"components/web-methods","unlisted":false},{"type":"link","label":"Social Interactions","href":"/legacy-docs/components/social","docId":"components/social","unlisted":false},{"type":"link","label":"Social Notifications","href":"/legacy-docs/components/notifications","docId":"components/notifications","unlisted":false},{"type":"category","label":"Tutorials","items":[{"type":"link","label":"Blog Posts","href":"/legacy-docs/components/blog-posts","docId":"components/blog-posts","unlisted":false},{"type":"link","label":"Push Notifications","href":"/legacy-docs/components/push-notifications","docId":"components/push-notifications","unlisted":false},{"type":"link","label":"Lido Example","href":"/legacy-docs/components/lido","docId":"components/lido","unlisted":false},{"type":"link","label":"Interacting with Near","href":"/legacy-docs/components/near","docId":"components/near","unlisted":false},{"type":"link","label":"Using IFrames","href":"/legacy-docs/components/using-iframes","docId":"components/using-iframes","unlisted":false},{"type":"link","label":"NEAR for Ethereum developers","href":"/legacy-docs/components/ethers-js","docId":"components/ethers-js","unlisted":false},{"type":"link","label":"Best Practices for Ethereum developers on NEAR","href":"/legacy-docs/components/ethers-js-best-practices","docId":"components/ethers-js-best-practices","unlisted":false},{"type":"link","label":"Design Components","href":"/legacy-docs/components/ds-components","docId":"components/ds-components","unlisted":false},{"type":"link","label":"BOS Loader","href":"/legacy-docs/components/bos-loader","docId":"components/bos-loader","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Chain Hosted UI","items":[{"type":"link","label":"Chain Hosted UI","href":"/legacy-docs/chain-hosted-ui/chain-hosted-ui","docId":"chain-hosted-ui/chain-hosted-ui","unlisted":false},{"type":"link","label":"Chain Hosted UI Tutorial","href":"/legacy-docs/chain-hosted-ui/chain-hosted-ui-tutorial","docId":"chain-hosted-ui/chain-hosted-ui-tutorial","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"chain-hosted-ui/chain-hosted-ui":{"id":"chain-hosted-ui/chain-hosted-ui","title":"Chain Hosted UI","description":"Chain Hosted UI is a decentralized frontend solution that lets you to deploy dApp frontends directly on the NEAR blockchain. A frontend can be built with typical Web2 tooling (e.g. React + Vite + node.js dependencies), and the resulting compressed bundle can be stored in the state of a smart contract.","sidebar":"intro"},"chain-hosted-ui/chain-hosted-ui-tutorial":{"id":"chain-hosted-ui/chain-hosted-ui-tutorial","title":"Chain Hosted UI tutorial","description":"Chain Hosted UI lets you to deploy dApp frontends directly on the NEAR blockchain.","sidebar":"intro"},"components/blog-posts":{"id":"components/blog-posts","title":"Blog Posts","description":"The Blog post components enable your gateway to promote regular Near Social posts into fully fledged blog posts.","sidebar":"intro"},"components/bos-gateway":{"id":"components/bos-gateway","title":"Using components on WebApps","description":"In order to use the components you create in a WebApp you need to use what is known as the NEAR VM. This virtual machine helps you to easily fetch components from the blockchain and transform them into executable code.","sidebar":"intro"},"components/bos-loader":{"id":"components/bos-loader","title":"BOS Loader","description":"In this article you\'ll learn how to develop, test, and deploy BOS components using CLI tools. You can use this workflow to tap into the collaboration, pull-request, and other GitHub benefits while still deploying components to the BOS.","sidebar":"intro"},"components/builtin-components":{"id":"components/builtin-components","title":"List of Native Components","description":"A list of all the built-in components to be used on Near Components.","sidebar":"intro"},"components/dev-environment":{"id":"components/dev-environment","title":"Choose your Dev Environment","description":"The environments in which you can develop Components are divided into two categories:","sidebar":"intro"},"components/ds-components":{"id":"components/ds-components","title":"Design Components","description":"When building components, the NEAR VM provides a complete set of Radix primitives to simplify UI development.","sidebar":"intro"},"components/ethers-js":{"id":"components/ethers-js","title":"NEAR for Ethereum developers","description":"NEAR components are chain-agnostic, enabling you to create decentralized frontends tailored for any Ethereum dApps. Throughout this article, we\'ll navigate prevalent use-cases with code snippets. You\u2019ll also find links to exemplary NEAR components for reference.","sidebar":"intro"},"components/ethers-js-best-practices":{"id":"components/ethers-js-best-practices","title":"Best Practices for Ethereum developers on NEAR","description":"In this example, we will create an Ethereum dApp on NEAR that functions as a portfolio manager, displaying the current balances for a list of tokens. Additionally, we will display current market value of each asset in the portfolio.","sidebar":"intro"},"components/integrate-components":{"id":"components/integrate-components","title":"Integrating Components","description":"To integrate Components to your frontend, you will leverage two tools:","sidebar":"intro"},"components/interaction":{"id":"components/interaction","title":"Smart Contract Interaction","description":"Your frontend can interact with different blockchains using the built-in BOS API. Let\'s see how to create an application that reads and stores a greeting from a NEAR smart contract.","sidebar":"intro"},"components/lido":{"id":"components/lido","title":"Lido Example","description":"If you are ready to explore further, the Lido component serves as an excellent fully-fledged example, as it demonstrates how to interact with a smart contract deployed on the Ethereum mainnet.","sidebar":"intro"},"components/near":{"id":"components/near","title":"Interacting with Near","description":"The components can use the Near object to interact with smart contracts in the NEAR blockchain. There are three methods:","sidebar":"intro"},"components/notifications":{"id":"components/notifications","title":"Social Notifications","description":"Applications such as NEAR Social and the NEAR Dev Portal allow components to send notifications to their users.","sidebar":"intro"},"components/push-notifications":{"id":"components/push-notifications","title":"Push Notifications","description":"Push messages enable your gateway to send notifications on desktop and mobile devices even when the users are not active.","sidebar":"intro"},"components/social":{"id":"components/social","title":"Social Interactions","description":"NEAR components can natively communicate with the SocialDB smart contract (currently deployed at social.near).","sidebar":"intro"},"components/state":{"id":"components/state","title":"Basics","description":"Borrowing from React, Near Components use hooks such as useState and useEffect to handle the state\'s logic, and props to receive parameters.","sidebar":"intro"},"components/using-iframes":{"id":"components/using-iframes","title":"Using IFrames","description":"In this tutorial you\'ll learn how to use the iframe VM tag and the Iframe resizer library, so you can embed external HTML or use custom DOM elements when building NEAR components.","sidebar":"intro"},"components/web-methods":{"id":"components/web-methods","title":"Web Browser Methods","description":"NEAR Components have access to classic web methods that enable them to:","sidebar":"intro"},"components/what-is":{"id":"components/what-is","title":"What are NEAR Components?","description":"NEAR Components are a new way to build web applications. They are composable, reusable and decentralized.","sidebar":"intro"},"welcome":{"id":"welcome","title":"NEAR Protocol - Deprecated Docs","description":"This is collection of documents that used to be part of our docs.","sidebar":"intro"}}}}')}}]);